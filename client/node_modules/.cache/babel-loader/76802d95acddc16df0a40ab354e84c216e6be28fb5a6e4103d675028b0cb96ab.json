{"ast":null,"code":"var _jsxFileName = \"/Users/adityavandanapu/Student-learning/client/src/pages/SurveyPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurveyPage() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Load questions\n  useEffect(() => {\n    const loadQuestions = () => {\n      try {\n        const storedQuestions = localStorage.getItem('questions');\n        if (!storedQuestions) throw new Error('No questions found');\n        const parsed = JSON.parse(storedQuestions);\n        if (!Array.isArray(parsed)) throw new Error('Invalid questions format');\n        setQuestions(parsed);\n        // Initialize empty answers\n        setAnswers(parsed.reduce((acc, _, i) => ({\n          ...acc,\n          [i]: ''\n        }), {}));\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadQuestions();\n  }, []);\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError('');\n    try {\n      const res = await axios.post('http://localhost:5001/api/submit-survey', {\n        answers,\n        topic: localStorage.getItem('surveyTopic')\n      }, {\n        withCredentials: true,\n        // Crucial for sessions\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (res.data.success) {\n        localStorage.setItem('subtopics', JSON.stringify(res.data.subtopics));\n        navigate('/subtopics');\n      } else {\n        throw new Error(res.data.message || 'Submission failed');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Submission error');\n      console.error('Submission error:', err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  if (error || !questions.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error loading survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error || 'No questions available'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"Return Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Survey Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Question \", i + 1, \": \", q]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: answers[i] || '',\n        onChange: e => setAnswers(prev => ({\n          ...prev,\n          [i]: e.target.value\n        })),\n        placeholder: \"Your answer...\",\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: submitting,\n      className: \"submit-btn\",\n      children: submitting ? 'Submitting...' : 'Submit Survey'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyPage, \"UerUNgkjgzgoxMk3PvRdR1+053c=\", false, function () {\n  return [useNavigate];\n});\n_c = SurveyPage;\nexport default SurveyPage;\nvar _c;\n$RefreshReg$(_c, \"SurveyPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","SurveyPage","_s","questions","setQuestions","answers","setAnswers","loading","setLoading","submitting","setSubmitting","error","setError","navigate","loadQuestions","storedQuestions","localStorage","getItem","Error","parsed","JSON","parse","Array","isArray","reduce","acc","_","i","err","message","handleSubmit","res","post","topic","withCredentials","headers","data","success","setItem","stringify","subtopics","_err$response","_err$response$data","response","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","q","value","onChange","e","prev","target","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/adityavandanapu/Student-learning/client/src/pages/SurveyPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction SurveyPage() {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Load questions\n  useEffect(() => {\n    const loadQuestions = () => {\n      try {\n        const storedQuestions = localStorage.getItem('questions');\n        if (!storedQuestions) throw new Error('No questions found');\n        \n        const parsed = JSON.parse(storedQuestions);\n        if (!Array.isArray(parsed)) throw new Error('Invalid questions format');\n        \n        setQuestions(parsed);\n        // Initialize empty answers\n        setAnswers(parsed.reduce((acc, _, i) => ({ ...acc, [i]: '' }), {}));\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadQuestions();\n  }, []);\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError('');\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5001/api/submit-survey', \n        {\n          answers,\n          topic: localStorage.getItem('surveyTopic')\n        },\n        {\n          withCredentials: true, // Crucial for sessions\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (res.data.success) {\n        localStorage.setItem('subtopics', JSON.stringify(res.data.subtopics));\n        navigate('/subtopics');\n      } else {\n        throw new Error(res.data.message || 'Submission failed');\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || 'Submission error');\n      console.error('Submission error:', err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading questions...</div>;\n\n  if (error || !questions.length) return (\n    <div className=\"error-container\">\n      <h3>Error loading survey</h3>\n      <p>{error || 'No questions available'}</p>\n      <button onClick={() => navigate('/')}>Return Home</button>\n    </div>\n  );\n\n  return (\n    <div className=\"survey-container\">\n      <h2>Survey Questions</h2>\n      \n      {questions.map((q, i) => (\n        <div key={i} className=\"question-card\">\n          <h4>Question {i+1}: {q}</h4>\n          <textarea\n            value={answers[i] || ''}\n            onChange={(e) => setAnswers(prev => ({\n              ...prev,\n              [i]: e.target.value\n            }))}\n            placeholder=\"Your answer...\"\n            rows={3}\n          />\n        </div>\n      ))}\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <button \n        onClick={handleSubmit}\n        disabled={submitting}\n        className=\"submit-btn\"\n      >\n        {submitting ? 'Submitting...' : 'Submit Survey'}\n      </button>\n    </div>\n  );\n}\n\nexport default SurveyPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}