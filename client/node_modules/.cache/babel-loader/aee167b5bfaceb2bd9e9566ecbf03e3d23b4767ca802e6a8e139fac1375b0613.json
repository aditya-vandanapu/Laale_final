{"ast":null,"code":"var _jsxFileName = \"/Users/adityavandanapu/Student-learning/client/src/pages/SurveyPage.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction SurveyPage() {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Load questions\n  useEffect(() => {\n    const loadQuestions = () => {\n      try {\n        const storedQuestions = localStorage.getItem('questions');\n        if (!storedQuestions) throw new Error('No questions found');\n        \n        const parsed = JSON.parse(storedQuestions);\n        if (!Array.isArray(parsed)) throw new Error('Invalid questions format');\n        \n        setQuestions(parsed);\n        // Initialize empty answers\n        setAnswers(parsed.reduce((acc, _, i) => ({ ...acc, [i]: '' }), {}));\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadQuestions();\n  }, []);\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError('');\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5001/api/submit-survey', \n        {\n          answers,\n          topic: localStorage.getItem('surveyTopic')\n        },\n        {\n          withCredentials: true, // Crucial for sessions\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (res.data.success) {\n        localStorage.setItem('subtopics', JSON.stringify(res.data.subtopics));\n        navigate('/subtopics');\n      } else {\n        throw new Error(res.data.message || 'Submission failed');\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || 'Submission error');\n      console.error('Submission error:', err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading questions...</div>;\n\n  if (error || !questions.length) return (\n    <div className=\"error-container\">\n      <h3>Error loading survey</h3>\n      <p>{error || 'No questions available'}</p>\n      <button onClick={() => navigate('/')}>Return Home</button>\n    </div>\n  );\n\n  return (\n    <div className=\"survey-container\">\n      <h2>Survey Questions</h2>\n      \n      {questions.map((q, i) => (\n        <div key={i} className=\"question-card\">\n          <h4>Question {i+1}: {q}</h4>\n          <textarea\n            value={answers[i] || ''}\n            onChange={(e) => setAnswers(prev => ({\n              ...prev,\n              [i]: e.target.value\n            }))}\n            placeholder=\"Your answer...\"\n            rows={3}\n          />\n        </div>\n      ))}\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <button \n        onClick={handleSubmit}\n        disabled={submitting}\n        className=\"submit-btn\"\n      >\n        {submitting ? 'Submitting...' : 'Submit Survey'}\n      </button>\n    </div>\n  );\n}\n\nexport default SurveyPage;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SurveyPage() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [topic, setTopic] = useState('');\n  const navigate = useNavigate();\n\n  // Load questions and verify topic\n  useEffect(() => {\n    const loadSurveyData = async () => {\n      try {\n        const currentTopic = localStorage.getItem('currentTopic');\n        if (!currentTopic) {\n          throw new Error('No topic selected');\n        }\n        setTopic(currentTopic);\n\n        // Verify topic exists in backend\n        const verifyRes = await axios.get(`http://localhost:5001/api/verify-topic/${encodeURIComponent(currentTopic)}`, {\n          withCredentials: true\n        });\n        if (!verifyRes.data.exists) {\n          throw new Error('Topic not found in database');\n        }\n\n        // Get questions\n        const questionsRes = await axios.get(`http://localhost:5001/api/topic-questions/${encodeURIComponent(currentTopic)}`, {\n          withCredentials: true\n        });\n        if (questionsRes.data.success) {\n          setQuestions(questionsRes.data.questions);\n          setAnswers(questionsRes.data.questions.reduce((acc, _, i) => ({\n            ...acc,\n            [i]: ''\n          }), {}));\n        } else {\n          throw new Error('Failed to load questions');\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to initialize survey');\n        // Optionally store the error in localStorage for debugging\n        localStorage.setItem('surveyError', err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadSurveyData();\n  }, [navigate]);\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError('');\n    try {\n      // First ensure topic is properly stored\n      const storeRes = await axios.post('api/store-topic', {\n        topic\n      }, {\n        withCredentials: true\n      });\n      if (!storeRes.data.success) {\n        throw new Error('Failed to verify topic storage');\n      }\n\n      // Then submit survey responses\n      const submitRes = await axios.post('http://localhost:5001/api/submit-topic-survey', {\n        topic,\n        answers: Object.entries(answers).map(([index, value]) => ({\n          questionId: questions[parseInt(index)].id || index,\n          answer: value\n        }))\n      }, {\n        withCredentials: true\n      });\n      if (submitRes.data.success) {\n        localStorage.setItem('subtopics', JSON.stringify(submitRes.data.subtopics));\n        localStorage.removeItem('surveyError'); // Clear any previous errors\n        navigate('/subtopics');\n      } else {\n        throw new Error(submitRes.data.message || 'Survey submission failed');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || 'Survey processing failed');\n      console.error('Survey submission error:', err);\n      // Store error details for debugging\n      localStorage.setItem('surveyError', JSON.stringify({\n        error: err.message,\n        timestamp: new Date().toISOString(),\n        topic\n      }));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Loading survey for \", localStorage.getItem('currentTopic') || 'your topic', \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render error state\n  if (error || !questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Survey Setup Failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error || 'Unable to load survey questions'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/home'),\n          children: \"Choose Different Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"survey-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [topic, \" Learning Assessment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please answer these questions to personalize your learning path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-number\",\n            children: [\"Q\", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), question.question || question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), question.options ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${answers[index] === option ? 'selected' : ''}`,\n            onClick: () => setAnswers(prev => ({\n              ...prev,\n              [index]: option\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `option-${index}-${optIndex}`,\n              checked: answers[index] === option,\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `option-${index}-${optIndex}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this)]\n          }, `option-${optIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answers[index] || '',\n          onChange: e => setAnswers(prev => ({\n            ...prev,\n            [index]: e.target.value\n          })),\n          placeholder: \"Type your answer here...\",\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)]\n      }, `question-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/home'),\n        className: \"secondary-button\",\n        disabled: submitting,\n        children: \"Back to Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: submitting || Object.values(answers).some(a => !a),\n        className: \"primary-button\",\n        children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), \" Generating Your Path...\"]\n        }, void 0, true) : 'Get My Learning Path'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyPage, \"qaX/Obp+gODT2NQWx7H6wh6DZTM=\", false, function () {\n  return [useNavigate];\n});\n_c = SurveyPage;\nexport default SurveyPage;\nvar _c;\n$RefreshReg$(_c, \"SurveyPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SurveyPage","_s","questions","setQuestions","answers","setAnswers","loading","setLoading","submitting","setSubmitting","error","setError","topic","setTopic","navigate","loadSurveyData","currentTopic","localStorage","getItem","Error","verifyRes","get","encodeURIComponent","withCredentials","data","exists","questionsRes","success","reduce","acc","_","i","err","_err$response","_err$response$data","response","message","setItem","handleSubmit","storeRes","post","submitRes","Object","entries","map","index","value","questionId","parseInt","id","answer","JSON","stringify","subtopics","removeItem","_err$response2","_err$response2$data","console","timestamp","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","window","location","reload","question","options","option","optIndex","prev","type","checked","onChange","htmlFor","e","target","placeholder","rows","disabled","values","some","a","_c","$RefreshReg$"],"sources":["/Users/adityavandanapu/Student-learning/client/src/pages/SurveyPage.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction SurveyPage() {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Load questions\n  useEffect(() => {\n    const loadQuestions = () => {\n      try {\n        const storedQuestions = localStorage.getItem('questions');\n        if (!storedQuestions) throw new Error('No questions found');\n        \n        const parsed = JSON.parse(storedQuestions);\n        if (!Array.isArray(parsed)) throw new Error('Invalid questions format');\n        \n        setQuestions(parsed);\n        // Initialize empty answers\n        setAnswers(parsed.reduce((acc, _, i) => ({ ...acc, [i]: '' }), {}));\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadQuestions();\n  }, []);\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError('');\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5001/api/submit-survey', \n        {\n          answers,\n          topic: localStorage.getItem('surveyTopic')\n        },\n        {\n          withCredentials: true, // Crucial for sessions\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (res.data.success) {\n        localStorage.setItem('subtopics', JSON.stringify(res.data.subtopics));\n        navigate('/subtopics');\n      } else {\n        throw new Error(res.data.message || 'Submission failed');\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || 'Submission error');\n      console.error('Submission error:', err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading questions...</div>;\n\n  if (error || !questions.length) return (\n    <div className=\"error-container\">\n      <h3>Error loading survey</h3>\n      <p>{error || 'No questions available'}</p>\n      <button onClick={() => navigate('/')}>Return Home</button>\n    </div>\n  );\n\n  return (\n    <div className=\"survey-container\">\n      <h2>Survey Questions</h2>\n      \n      {questions.map((q, i) => (\n        <div key={i} className=\"question-card\">\n          <h4>Question {i+1}: {q}</h4>\n          <textarea\n            value={answers[i] || ''}\n            onChange={(e) => setAnswers(prev => ({\n              ...prev,\n              [i]: e.target.value\n            }))}\n            placeholder=\"Your answer...\"\n            rows={3}\n          />\n        </div>\n      ))}\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <button \n        onClick={handleSubmit}\n        disabled={submitting}\n        className=\"submit-btn\"\n      >\n        {submitting ? 'Submitting...' : 'Submit Survey'}\n      </button>\n    </div>\n  );\n}\n\nexport default SurveyPage;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction SurveyPage() {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [topic, setTopic] = useState('');\n  const navigate = useNavigate();\n\n  // Load questions and verify topic\n  useEffect(() => {\n    const loadSurveyData = async () => {\n      try {\n        const currentTopic = localStorage.getItem('currentTopic');\n        if (!currentTopic) {\n          throw new Error('No topic selected');\n        }\n        setTopic(currentTopic);\n\n        // Verify topic exists in backend\n        const verifyRes = await axios.get(\n          `http://localhost:5001/api/verify-topic/${encodeURIComponent(currentTopic)}`,\n          { withCredentials: true }\n        );\n\n        if (!verifyRes.data.exists) {\n          throw new Error('Topic not found in database');\n        }\n\n        // Get questions\n        const questionsRes = await axios.get(\n          `http://localhost:5001/api/topic-questions/${encodeURIComponent(currentTopic)}`,\n          { withCredentials: true }\n        );\n\n        if (questionsRes.data.success) {\n          setQuestions(questionsRes.data.questions);\n          setAnswers(questionsRes.data.questions.reduce((acc, _, i) => ({ ...acc, [i]: '' }), {}));\n        } else {\n          throw new Error('Failed to load questions');\n        }\n      } catch (err) {\n        setError(err.response?.data?.message || err.message || 'Failed to initialize survey');\n        // Optionally store the error in localStorage for debugging\n        localStorage.setItem('surveyError', err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadSurveyData();\n  }, [navigate]);\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    setError('');\n\n    try {\n      // First ensure topic is properly stored\n      const storeRes = await axios.post(\n        'api/store-topic',\n        { topic },\n        { withCredentials: true }\n      );\n\n      if (!storeRes.data.success) {\n        throw new Error('Failed to verify topic storage');\n      }\n\n      // Then submit survey responses\n      const submitRes = await axios.post(\n        'http://localhost:5001/api/submit-topic-survey',\n        {\n          topic,\n          answers: Object.entries(answers).map(([index, value]) => ({\n            questionId: questions[parseInt(index)].id || index,\n            answer: value\n          }))\n        },\n        { withCredentials: true }\n      );\n\n      if (submitRes.data.success) {\n        localStorage.setItem('subtopics', JSON.stringify(submitRes.data.subtopics));\n        localStorage.removeItem('surveyError'); // Clear any previous errors\n        navigate('/subtopics');\n      } else {\n        throw new Error(submitRes.data.message || 'Survey submission failed');\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || 'Survey processing failed');\n      console.error('Survey submission error:', err);\n      // Store error details for debugging\n      localStorage.setItem('surveyError', JSON.stringify({\n        error: err.message,\n        timestamp: new Date().toISOString(),\n        topic\n      }));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Render loading state\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Loading survey for {localStorage.getItem('currentTopic') || 'your topic'}...</p>\n      </div>\n    );\n  }\n\n  // Render error state\n  if (error || !questions.length) {\n    return (\n      <div className=\"error-container\">\n        <h3>Survey Setup Failed</h3>\n        <p>{error || 'Unable to load survey questions'}</p>\n        <div className=\"error-actions\">\n          <button onClick={() => navigate('/home')}>Choose Different Topic</button>\n          <button onClick={() => window.location.reload()}>Try Again</button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"survey-container\">\n      <header className=\"survey-header\">\n        <h2>{topic} Learning Assessment</h2>\n        <p>Please answer these questions to personalize your learning path</p>\n      </header>\n\n      <div className=\"questions-container\">\n        {questions.map((question, index) => (\n          <div key={`question-${index}`} className=\"question-card\">\n            <h3>\n              <span className=\"question-number\">Q{index + 1}:</span>\n              {question.question || question}\n            </h3>\n            \n            {question.options ? (\n              <div className=\"options-container\">\n                {question.options.map((option, optIndex) => (\n                  <div\n                    key={`option-${optIndex}`}\n                    className={`option ${answers[index] === option ? 'selected' : ''}`}\n                    onClick={() => setAnswers(prev => ({ ...prev, [index]: option }))}\n                  >\n                    <input\n                      type=\"radio\"\n                      id={`option-${index}-${optIndex}`}\n                      checked={answers[index] === option}\n                      onChange={() => {}}\n                    />\n                    <label htmlFor={`option-${index}-${optIndex}`}>{option}</label>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <textarea\n                value={answers[index] || ''}\n                onChange={(e) => setAnswers(prev => ({ ...prev, [index]: e.target.value }))}\n                placeholder=\"Type your answer here...\"\n                rows={4}\n              />\n            )}\n          </div>\n        ))}\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <div className=\"survey-footer\">\n        <button\n          onClick={() => navigate('/home')}\n          className=\"secondary-button\"\n          disabled={submitting}\n        >\n          Back to Topics\n        </button>\n        <button\n          onClick={handleSubmit}\n          disabled={submitting || Object.values(answers).some(a => !a)}\n          className=\"primary-button\"\n        >\n          {submitting ? (\n            <>\n              <span className=\"spinner\"></span> Generating Your Path...\n            </>\n          ) : (\n            'Get My Learning Path'\n          )}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default SurveyPage;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}